@startuml
interface Subject {
    +request(): void
}

class RealSubject {
    +request(): void
}

interface InvocationHandler {
    +invoke(proxy, method, args): Object
}

class Proxy {
    +newProxyInstance(ClassLoader, Class[], InvocationHandler): Object
}

class Client {
    +main(args: String[]): void
}

class CustomInvocationHandler {
    -target: Object
    +invoke(proxy, method, args): Object
}

Subject <|.. RealSubject
Subject <|.. Proxy
InvocationHandler <|.. CustomInvocationHandler
RealSubject <- CustomInvocationHandler
Proxy --> InvocationHandler
Client --> Subject
Client --> Proxy

note right of Proxy: JDK提供的代理工厂类\n用于动态创建代理对象
note right of CustomInvocationHandler: 自定义的调用处理器\n实现代理逻辑
@enduml